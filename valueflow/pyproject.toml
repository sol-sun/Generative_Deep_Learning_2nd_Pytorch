[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "valueflow"
version = "1.0.0"
description = "Traceable Computation Graph for Values"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "ValueFlow Team", email = "team@valueflow.dev"}
]
maintainers = [
    {name = "ValueFlow Team", email = "team@valueflow.dev"}
]
keywords = ["computation", "graph", "traceability", "finance", "data-analysis"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial",
]
requires-python = ">=3.9"
dependencies = [
    "pydantic>=2.0.0",
    "pandas>=1.5.0",
    "numpy>=1.20.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
viz = [
    "networkx>=3.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
]
perf = [
    "psutil>=5.9.0",
    "memory-profiler>=0.60.0",
]
all = [
    "valueflow[dev,viz,perf]"
]

[project.urls]
Homepage = "https://github.com/your-org/valueflow"
Documentation = "https://valueflow.readthedocs.io"
Repository = "https://github.com/your-org/valueflow.git"
"Bug Tracker" = "https://github.com/your-org/valueflow/issues"
Changelog = "https://github.com/your-org/valueflow/blob/main/CHANGELOG.md"

[project.scripts]
valueflow = "valueflow.cli:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["valueflow*"]

[tool.setuptools.package-data]
valueflow = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["valueflow"]
known_third_party = ["pydantic", "pandas", "numpy", "pytest"]

# MyPy configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "networkx.*",
    "matplotlib.*",
    "seaborn.*",
    "psutil.*",
    "memory_profiler.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=valueflow",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["src/valueflow/tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/valueflow"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]
per-file-ignores = [
    "__init__.py:F401",
    "tests/*:S101",
]
