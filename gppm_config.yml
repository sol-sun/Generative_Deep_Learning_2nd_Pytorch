# Global PPM 設定ファイル
# このファイルを編集して、分析のパラメータを設定してください

# =============================================================================
# 1. 分析期間設定（最重要 - ユーザーが最も関心を持つ設定）
# =============================================================================
# 推計される結果の期間を設定してください
# この期間のデータを使用して分析が実行されます
analysis_period:
  # 開始期間（YYYYMM形式、例：201909）
  start: 201909
  # 終了期間（YYYYMM形式、例：202406）
  end: 202406

# =============================================================================
# 2. 出力設定（結果の保存先）
# =============================================================================
# 分析結果の保存先を設定してください
output:
  # 結果保存ディレクトリ
  directory: "/tmp/gppm_output"
  # ファイル名設定
  files:
    # 変分推論結果ファイル
    variational_result: "variational_inference_result.pkl"
    # データセットファイル
    dataset: "dataset.pkl"
    # CSV処理結果ファイル
    csv_processed: "csv_processed_result.pkl"

# =============================================================================
# 3. 変分推論設定（ベイズ分析の核心）
# =============================================================================
# 変分推論によるベイズ分析の設定
variational_inference:
  # 新しい変分推論を実行する場合の設定
  inference_config:
    # 推論エンジン
    engine: "cmdstanpy"  # cmdstanpy, pymc
    # Stanモデルファイル（デフォルトモデル）
    model_file: "src/gppm/analysis/bayesian/models/global_ppm_roic_model.stan"
    # サンプル数（事後分布からのサンプル数）
    samples: 2000
    # 最適化反復数（変分推論の最適化回数）
    optimization_iterations: 500000
    # 乱数シード（再現性のため）
    random_seed: 42
    # 収束を要求するか
    require_convergence: false

# =============================================================================
# 4. データ処理設定（技術的な設定）
# =============================================================================
# 通常は変更不要。パフォーマンス調整が必要な場合のみ変更してください
data_processing:
  # CSV処理の並列化設定
  parallel_workers: 4  # CPUコア数に応じて調整
  # メモリ制限（MB）
  memory_limit_mb: 2048
  # データ型（メモリ使用量を削減したい場合は'float32'に変更）
  data_type: "float64"

# =============================================================================
# 5. ログ設定
# =============================================================================
# ログレベルの設定
log_level: INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL

# =============================================================================
# 6. CSV処理設定
# =============================================================================
# CSVファイル処理ツールで使用する設定
# コマンドライン引数で上書き可能です
csv_processing:
  # 処理対象のCSVファイルパス（例: /path/to/your/data.csv）
  input_file: null

# =============================================================================
# 7. プロダクトレベル設定
# =============================================================================
# 製品分類の階層レベル設定
product_level:
  # 使用する製品レベル（L6: 最詳細、L5: 詳細サブ業界）
  level: "L6"  # L6, L5

# =============================================================================
# 8. オプション設定
# =============================================================================
# オプションのデータファイルパス
# デフォルト値を使用する場合はnullのままにしてください
optional_data:
  mapping_file: null

# =============================================================================
# 9. Tradename Segment Mapper設定
# =============================================================================
# FactSetデータを使用したTradename Segment Mapperの設定
# GPU環境での実行が必要です
tradename_segment_mapper:
  # 埋め込みモデルのパス
  model_path: "/home/tmiyahara/repos/Neumann-Notebook/tmiyahara/202411/BAAI-bge-m3-langchain"
  
  # 出力設定
  output:
    # 出力ファイルパス（.pkl形式）
    file_path: "/tmp/mapping_df.pkl"
  
  # データ処理設定
  data_processing:
    # ドキュメント分割サイズ
    chunk_size: 100000
    # バッチサイズ
    batch_size: 5000
    # 企業あたりの最大商標数
    max_items_per_entity: 100
  
  # 検索・マッピング設定
  search_mapping:
    # 初期検索候補数（総データ数の割合）
    initial_search_ratio: 0.05  # 5%
    # 検索候補増加倍率
    search_expansion_factor: 2
    # 最大検索候補数（総データ数の割合）
    max_search_ratio: 0.95  # 95%
    # 検索タイムアウト（秒）
    search_timeout: 3600
  
  # 並列処理設定
  parallel_processing:
    # CPU並列ワーカー数
    cpu_workers: 4
    # GPU並列バッチサイズ
    gpu_batch_size: 1000